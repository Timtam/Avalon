<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, April 06, 2010, 8:39 AM -->
<!-- MuClient version 4.46 -->

<!-- Plugin "output_functions" generated by Plugin Wizard -->

<muclient>
<plugin
   name="output_functions"
   author="Oriol Gomez"
   id="54846c23d8b15594e7eb4b8a"
   language="Lua"
   purpose="provides functions to help tts users."
   date_written="2010-04-06 08:37:40"
   requires="4.46"
   version="1.0"
   save_state="n"
   >

</plugin>
<!--  Aliases  -->
<aliases>
<alias
match="Line_Get *"
enabled="y"
script="LineGet"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="prevline"
enabled="y"
script="prev_line"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="toggleoutput"
enabled="y"
script="output_toggle"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="toggleinterrupt"
enabled="y"
script="interrupt_toggle"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

<alias
match="curline"
enabled="y"
script="cur_line"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="select"
enabled="y"
script="selectscr"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

<alias
match="nextline"
enabled="y"
script="next_line"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="topline"
enabled="y"
script="top_line"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>
<alias
match="snap_shot"
enabled="y"
script="snapshot"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

<alias
match="endline"
enabled="y"
script="end_line"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

</aliases>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
for i = 1, 9 do
Accelerator("ctrl + "..tostring(i), "Line_Get "..tostring(i))
end
Accelerator("ctrl +0", "Line_Get 10")
Accelerator("ctrl+shift+o","nextline")
Accelerator("ctrl+alt+enter","toggleinterrupt")
Accelerator("ctrl+alt+o","toggleoutput")
Accelerator("ctrl+shift+i","curline")
Accelerator("ctrl+shift+space","select")
Accelerator("ctrl+shift+u","prevline")
Accelerator("ctrl+shift+n","endline")
Accelerator("ctrl+shift+y","topline")
Accelerator("ctrl+shift+s","snap_shot")
function selectscr()
if (selecting==0) or (selecting==nil) then
selecting=1
Execute("tts_interrupt selection start.")
tselect={}
sline=cline
else
Execute("tts_interrupt Selection coppied.")
for i=sline, cline do
table.insert(tselect,GetLineInfo(i,1))
end
SetClipboard(table.concat(tselect,"\n"))
selecting=0
tselect={}
end
end
function output_toggle()
if(GetVariable("output")=="0") or (GetVariable("output")==nil) then
SetVariable("output", "1")
Note("output notepad on")
else
Note("output notepad off")
SetVariable("output", "0")
end
end
function interrupt_toggle()
if(GetVariable("interrupt")=="1") or (GetVariable("interrupt")==nil) then
SetVariable("interrupt", "0")
Note("interrupt on enter off")
else
Note("interrupt on enter on")
SetVariable("interrupt", "1")
end
end
function LineGet(name, line, wc)
lines=GetLinesInBufferCount()
line=GetLineInfo(lines - wc[1],1)
wc=wc[1]
local timeout = 0.4 -- in seconds
if modes[wc] == nil then
modes[wc] = {os.clock(), 1}
elseif os.clock()-modes[wc][1] >= timeout then
modes[wc][1] = os.clock()
modes[wc][2] = 1
else
modes[wc][1] = os.clock()
modes[wc][2] = modes[wc][2] + 1
end
if modes[wc][2] > 3 then
modes[wc][2] = 3
end
if modes[wc][2] == 3 then
PasteCommand(line)
Execute("tts_interrupt pasted.")
end
if modes[wc][2] == 2 then
SetClipboard(line)
Execute("tts_interrupt copied.")
end
if modes[wc][2] == 1 then
Execute("tts_interrupt "..line)
end
end
function OnPluginCommandEntered(s)
if world.GetVariable("interrupt")=="1" then
Execute("tts_stop")
end
end
function OnPluginInstall()
if (GetVariable("output")==nil) then
SetVariable("output","1")
end
modes = {} -- for keyboard states
msgbuffer={}
cline=1
line=0
mode={}
end
function OnPluginScreendraw(t,l,line)
if(GetVariable("output")=="0") then
return
end
if(GetInfo(113)==false) then
table.insert(msgbuffer,line)
else
AppendToNotepad("output",line.."\r\n")
end
end
function OnPluginGetFocus()
if(GetVariable("output")=="0") then
return
end
if(#msgbuffer>0) then
for i, buffered in ipairs(msgbuffer) do
AppendToNotepad("output",buffered.."\r\n")
end
msgbuffer={}
end
end
function prev_line()
lines=GetLinesInBufferCount()
if(cline<=1) then
Execute("tts_interrupt top")
else
cline=cline-1
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline-1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
Execute("tts_interrupt "..line)
end
end
function cur_line()
if(cline==0) then
cline=GetLinesInBufferCount()
end
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
Execute("tts_interrupt "..line)
end
function next_line()
lines=GetLinesInBufferCount()
if(cline>=lines) then
Execute("tts_interrupt bottom")
else
cline=cline+1
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline-1
line=GetLineInfo(cline,1)
end
Execute("tts_interrupt "..line)
end
end
function end_line()
cline=GetLinesInBufferCount()
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>GetLinesInBufferCount()) do
cline=cline-1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
Execute("tts_interrupt Bottom: "..line)
end
function top_line()
cline=1
while(GetLineInfo(cline,1)=="") and not (cline<1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline-1
line=GetLineInfo(cline,1)
end
Execute("tts_interrupt top: "..line)
end
function snapshot()
for snapline=1, GetLinesInBufferCount() do
AppendToNotepad("snapshot",GetLineInfo(snapline,1).."\r\n")
ActivateNotepad("snapshot ")
end
end
]]>
</script>


</muclient>
