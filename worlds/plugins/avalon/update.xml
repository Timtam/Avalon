<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Donnerstag, März 20, 2014, 1:35  -->
<!-- MuClient version 4.91 -->

<!-- Plugin "timecatcher" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Avalon_Updater"
   author="Magician"
   id="335ef2e8fe775511593881e0"
   language="lua"
   purpose="Update information for the Avalon Soundpack"
   save_state="n"
   date_written="2014-03-20 13:34:01"
   requires="4.55"
   version="1.0"
   >

</plugin>

<aliases>
  <alias
   regexp="y"
   match="aktualisiere|update"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>updateCheckForce()</send>
  </alias>
  <alias
   regexp="y"
   match="(aktualisiere|update) har(d|t)"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>updateReset()</send>
  </alias>
</aliases>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
async = require("async")
avalon = nil
avalonId = world.GetPluginVariable("", "avalon")
checkPeriod = 900 -- 15 minutes
commitFetchUrl="https://api.github.com/repos/Timtam/Avalon/commits?sha=master"
downloadThread = nil
informed = false
json=require("json")
path = require("pl.path")
ppi=require("ppi")

world.DoAfterSpecial(0.5, "PluginInstall()", sendto.script)
avalon = ppi.Load(avalonId)

function updateCheck()
  --if path.isdir(world.GetInfo(66)..".git") == true then
  --  world.Note("Soundpack laeuft via Git, Updates werden nicht automatisch geprueft.")
  --  return
  --end
  if informed == true then
    return -- updater will check at next start only, since we already informed one time
  end
  downloadThread = async.request(commitFetchUrl, "HTTPS")
  world.DoAfterSpecial(1, "updateCheckFinished()",sendto.script)
end

function updateCheckFinished()
  local commits, current
  if downloadThread:alive()==true then
    world.DoAfterSpecial(1, "updateCheckFinished()", sendto.script)
    return
  end
  local retval, page, status, headers, full_status = downloadThread:join()
  if page ~= nil then
    commits = json.decode(page)
    current = avalon.GetConfig("update", "hash")
    if current == 0 or avalon.GetConfig("update", "updated") == 1 then
      -- no hash set yet, for example when downloading as zip file
      -- also the updater may have run recently, same procedure
      avalon.SetConfig("update","hash",commits[1]["sha"])
      avalon.SetConfig("update", "updated", 0)
    else
      -- valid hash already set and updater not active since the last check
      if current ~= commits[1]["sha"] then
        printUpdateMessage(commits, current)
        informed = true
        avalon.PSND("misc/update.ogg")
      end
    end
  end
  world.DoAfterSpecial(checkPeriod, "updateCheck()", sendto.script)
end

function PluginInstall()
  avalon.HookCallback("LOGIN", function()
    updateCheck()
  end)
end

function printUpdateMessage(commits, current)
  -- will print an update message, displaying new stuff for the user
  local currentIndex = 2
  local i
  local message
  while commits[currentIndex]["sha"] ~= current do
    currentIndex = currentIndex + 1
  end
  i = currentIndex - 1

  -- formatting the message
  message = "Es ist ein Update fuer das Soundpack verfuegbar!\n"
  message = message.."Die neuesten Aenderungen auf einen Blick:\n"

  while i >= 1 do
    message = message.. tostring(currentIndex - i)..".\n\t"
    message = message..string.gsub(commits[i]["commit"]["message"], "\n", "\n\t").."\n"
    i = i - 1
  end
  if currentIndex > #commits then
    message = message.."Weitere Aenderungen koennten vorgenommen worden sein.\n"
    message = message.."Das Soundpack prueft immer nur die neuesten Aktualisierungen.\n"
  end
  message = message.."Es wird empfohlen, das Soundpack zu aktualisieren. Dafuer muss der MUSHclient geschlossen\n"
  message = message.."und die update.exe im Soundpack ausgefuehrt werden.\n"
  message = message.."Es wird nur eine Information pro Sitzung angezeigt.\n"
  message = message.."Um spaeter erneut auf Aktualisierungen zu pruefen, muss das Soundpack\n"
  message = message.."neu gestartet werden, oder der Befehl\n"
  message = message.."update oder aktualisiere ausgefuehrt werden.\n"
  message = message.."Sollte diese Meldung versehendlich angezeigt werden,\n"
  message = message.."kann die aktuelle Version mittels\n"
  message = message.."update hart, update hard,\n"
  message = message.."aktualisiere hart oder aktualisiere hard auf die\n"
  message = message.."derzeit neueste Version festgelegt werden."
  world.Note(message)
end

function updateCheckForce()
  if downloadThread ~=nil and downloadThread:alive() == true then
    world.Note("Es ist bereits eine Pruefung in Gange.")
    return
  end
  informed = false
  world.Note("Es wird nach Aktualisierungen gesucht...")
  world.Note("Sollte keine Meldung angezeigt werden, ist das Soundpack bereits aktuell.")
  updateCheck()
end

function updateReset()
  if downloadThread ~= nil and downloadThread:alive() == true then
    world.Note("Es laeuft derzeit eine Pruefung.")
    return
  end
  avalon.SetConfig("update", "updated", 1)
  updateCheck()
  world.Note("Die aktuelle Soundpack-Version wird auf die derzeit neueste Version festgelegt.")
end
]]>
</script>


</muclient>
