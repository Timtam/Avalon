<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Samstag, April 14, 2018, 7:36  -->
<!-- MuClient version 5.05 -->

<!-- Plugin "speedwalking" generated by Plugin Wizard -->

<muclient>
<plugin
   name="speedwalking"
   author="Magician"
   id="12e9bfa9a98aa54bd54349a6"
   language="Lua"
   purpose="Ermöglicht das Laufen von Ort zu Ort in Avalon"
   date_written="2018-04-14 07:34:25"
   requires="4.70"
   version="1.0"
   save_state="n"
   >

</plugin>

<aliases>
  <alias
   match="safespeedwalks_switch"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>safespeedwalks_switch()</send>
</alias>
  <alias
   match="speedwalk_break"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>speedwalk_break()</send>
</alias>
  <alias
   match="^/([a-zA-Z0-9]*\.?[a-zA-Z0-9]*)_?([a-zA-Z0-9]*\.?[a-zA-Z0-9]*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
  >
  <send>speedwalk_start("%1", "%2")</send>
</alias>
  <alias
   match="^/_([a-zA-Z0-9]*\.?[a-zA-Z0-9]*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
  >
  <send>speedwalk_start("", "%1")</send>
</alias>
  <alias
   match="pos"
   enabled="y"
   send_to="12"
   sequence="101"
  >
  <send>print_position()</send>
</alias>
</aliases>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
require("avalon.speedwalking.speedwalking")
Path = require("pl.path")
PPI = require("ppi")
Avalon = PPI.Load(world.GetPluginVariable("", "avalon"))
Dunkel = 0
RoomID = nil
SafeSpeedwalks = 1
world.DoAfterSpecial(0.5, "PluginInstall()", 12)

function PluginInstall()
  world.Accelerator("ctrl+D", "speedwalk_break")
  world.Accelerator("F5", "safespeedwalks_switch")
  Avalon.HookCallback('DUNKEL', OnAvalonDunkel)
  Avalon.HookCallback('ROOMID', OnAvalonRoomID)
  Avalon.HookCallback('CLOSE', OnAvalonClose)
  SafeSpeedwalks = Avalon.GetConfig('settings', 'SafeSpeedwalks') or 1
end

function OnAvalonDunkel(dunkel)
  Dunkel = dunkel
end

function OnAvalonRoomID(id, name, x, y)
  if id ~= RoomID then
    stations = Stations:find(id)
    if stations:len() == 1 then
      if (Path.exists(GetInfo(74).."Stations/"..stations[1].name..".ogg")) then
        stationsnd = GetInfo(74).."Stations/"..stations[1].name..".ogg"
      else
        stationsnd = GetInfo(74).."Stations/Misc.ogg"
      end
      Avalon.PSND(stationsnd)
    end
  end
  RoomID = id
end

function OnAvalonClose()
  Avalon.SetConfig('settings', 'SafeSpeedwalks', SafeSpeedwalks)
end

function OnPluginScreendraw(type, log, line)
  if type == 0 then
    speedwalk_process(true)
  end
end

function OnPluginTick()
  speedwalk_process()
end

-- falls von hier aus speedwalks starten, werden diese ausgegeben
function print_position()
  if (SafeSpeedwalks == 1) then
    list = stations_getspeedwalksbyroomid(RoomID)
    if (#list == 1) then
      msg = "\nVon hier startet ein Speedwalk:\n"
      for number, walk in pairs(list) do
        msg = msg.."\t"..walk
        if (speedwalksafety[walk]) then
          msg = msg..' (sicher)'
        else
          msg = msg.." (unsicher)"
        end
        msg = msg.."\n"
      end
      msg = string.sub(msg, 1, -2)
      world.Note(msg)
    end
    if (#list > 1) then
      msg = "\nVon hier starten "..#list.." Speedwalks:\n"
      for number, walk in pairs(list) do
        msg = msg.."\t"..walk
        if (speedwalksafety[walk]) then
          msg = msg.." (sicher)"
        else
          msg = msg.." (unsicher)"
        end
        msg = msg.."\n"
      end
      msg = string.sub(msg, 1, -2)
      world.Note(msg)
    end
  end
end

function safespeedwalks_switch()
  SafeSpeedwalks = 1 - SafeSpeedwalks
  if (SafeSpeedwalks == 0) then
    world.Note("Die Speedwalks werden nicht mehr abgesichert.")
  else
    world.Note("Die Speedwalks werden nun abgesichert.")
  end
  Avalon.PSND("Misc/ConfigSwitch.ogg")
end

function speedwalk_start(from, to)
  -- die verschiedenen faelle
  -- es wird weder von, noch nach angegeben -> ein paar informationen
  if from == "" and to == "" then
    local msg = "Das Speedwalking in Avalon\n"
    msg = msg.."In Avalon kann man von Ort zu Ort laufen, indem man den Befehl /, gefolgt von\n"
    msg = msg.."den Start- und Zielpositionen angibt.\n"
    msg = msg.."Die Positionen werden dabei in zwei Teile geteilt: die Domaene und den Ort.\n"
    msg = msg.."Die Domaene gibt den uebergeordneten Bereich an, waehrend der Ort sehr\n"
    msg = msg.."spezifisch ist. Moechte man beispielsweise von Alotria aus in die Bank in\n"
    msg = msg.."Minias laufen, so kann man /nereid.alotria_minias.bank verwenden.\n"
    msg = msg.."Hinweis: Die Domaene und der Ort koennen so weit wie moeglich abgekuerzt werden,\n"
    msg = msg.."solange sie eindeutig bleiben. /ne.alo_min.bank funktioniert also auch.\n"
    msg = msg.."Sollte es einen Ort mit einem bestimmten Namen nur ein einziges Mal geben,\n"
    msg = msg.."koennt ihr die Domaene auch entfallen lassen.\n"
    msg = msg.."Eine Information zu jedem bekannten Ort bekommt ihr mittels /domaene.ort\n"
    msg = msg.."Wenn ihr euch bereits an einem bekannten Ort befindet, reicht es auch, wenn\n"
    msg = msg.."ihr nur die Zielposition angebt. Es reicht dann /_min.bank"
    world.Note(msg)
    return
  end
  -- es wird nur von angegeben -> wir geben ein paar informationen fuer diese location aus
  if from ~= "" and to == "" then
    stations = Stations:find(from)
    if stations:len() == 0 then
      world.Note("Es gibt keinen Ort mit diesem Namen.")
    elseif stations:len() > 1 then
      world.Note("Dieser Name trifft auf die folgenden Orte zu:\n"..stations:map(function(s) return s.domain.."."..s.name end):join(", "))
    else
      msg = "Name: "..stations[1].name.."\n"
      msg = msg.."Domaene: "..stations[1].domain.."\n"
      msg = msg.."Beschreibung: "..stations[1].description
      world.Note(msg)
    end
    return
  end
  -- es wird nur to angegeben, wir laufen also von hier los, falls moeglich
  if from == "" then
    if SafeSpeedwalks == 1 and Dunkel == 1 then
      world.Note("Um Speedwalks abzusichern, muss es auf Deinem Feld hell sein. Umschalten kannst Du die Absicherung mit der F5-Taste.")
      return
    end
    stations = Stations:find(RoomID)
  else
    stations = Stations:find(from)
  end
  if stations:len() == 0 then
    world.Note("Dieser Startpunkt ist derzeit nicht bekannt.")
    return
  end
  if stations:len() > 1 then
    world.Note("Dieser Startpunkt trifft auf mehrere Orte zu:\n"..stations:map(function(s) return s.domain.."."..s.name end):join(", "))
    return
  end
  from = stations[1]
  stations = Stations:find(to)
  if stations:len() == 0 then
    world.Note("Dieser Zielpunkt ist derzeit nicht bekannt.")
    return
  end
  if stations:len() > 1 then
    world.Note("Dieser Zielpunkt trifft auf mehrere Orte zu:\n"..stations:map(function(s) return s.domain.."."..s.name end):join(", "))
    return
  end
  to = stations[1]
  speedwalk_init(from, to)
end
]]>
</script>


</muclient>
