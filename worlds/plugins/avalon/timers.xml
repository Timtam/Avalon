<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Montag, Dezember 31, 2018, 5:48  -->
<!-- MuClient version 5.05 -->

<!-- Plugin "timers" generated by Plugin Wizard -->

<muclient>
<plugin
   name="timers"
   author="Magician"
   id="502d3d0a4888111e44823e5d"
   language="Lua"
   purpose="Diverse Timer-Funktionalitaeten"
   save_state="n"
   date_written="2018-12-31 05:48:28"
   requires="4.70"
   version="1.0"
   >

</plugin>

<!--  Aliases  -->

<aliases>
  <alias
   regexp="y"
   match="^timer$"
   enabled="y"
   sequence="99"
   send_to="12"
  >
  <send>timers_print()</send>
  </alias>
  <alias
   regexp="y"
   match="^timer neu *([a-zA-Z0-9]*) *([0-9]*) *([0-9]*)$"
   enabled="y"
   sequence="100"
   send_to="12"
  >
  <send>timers_add("%1", "%3", "%2")</send>
  </alias>
</aliases>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->

<script>
<![CDATA[
PPI = require("ppi")
timers = require("timers")
TimerProcessor = timers.TimerProcessor()
Types = require("pl.types")

function timers_print()
  TimerProcessor:Print()
end

function timers_add(name, tick, duration, end_sound)

  if Types.is_empty(name) then
    world.Note("timer neu <name> <warnzeit> <laenge>")
    world.Note("Legt einen neuen Timer an. Dabei werden die folgenden Argumente beruecksichtigt:")
    world.Note("\tname: Der Name des Timers in der Liste")
    world.Note("\twarnzeit: immer nach den hier angegebenen Sekunden wird ein Hinweis ausgegeben")
    world.Note("\t\twird 0 angegeben, wird keine Warnung ausgegeben")
    world.Note("\tlaenge: Laenge des Timers (er wird danach automatisch beendet)")
    world.Note("\t\twird 0 angegeben, laeuft er solange, bis er manuell beendet wird")
    world.Note("\t\toder der Client neu gestartet wird")
    return
  end

  TimerProcessor:AddTimer(name, tick, duration, end_sound)
  world.Note("Der Timer wurde erstellt.")
end

function OnPluginInstall()
  PPI.Expose('AddTimer', function(name, tick, duration, end_sound)
    return TimerProcessor:AddTimer(name, tick, duration, end_sound)
  end)

  PPI.Expose('EndTimer', function(id)
    return TimerProcessor:EndTimer(id)
  end)
end

function OnPluginTick()
  TimerProcessor:Tick()
end
]]>
</script>

</muclient>
